--
-- INT8
-- Test int8 64-bit integers.
--
-- check min/max values and overflow behavior
select '-9223372036854775808'::int8;
         int8         
----------------------
 -9223372036854775808
(1 row)

select '-9223372036854775809'::int8;
ERROR:  value "-9223372036854775809" is out of range for type bigint
LINE 1: select '-9223372036854775809'::int8;
               ^
select '9223372036854775807'::int8;
        int8         
---------------------
 9223372036854775807
(1 row)

select '9223372036854775808'::int8;
ERROR:  value "9223372036854775808" is out of range for type bigint
LINE 1: select '9223372036854775808'::int8;
               ^
select -('-9223372036854775807'::int8);
      ?column?       
---------------------
 9223372036854775807
(1 row)

select -('-9223372036854775808'::int8);
ERROR:  bigint out of range
select '9223372036854775800'::int8 + '9223372036854775800'::int8;
ERROR:  bigint out of range
select '-9223372036854775800'::int8 + '-9223372036854775800'::int8;
ERROR:  bigint out of range
select '9223372036854775800'::int8 - '-9223372036854775800'::int8;
ERROR:  bigint out of range
select '-9223372036854775800'::int8 - '9223372036854775800'::int8;
ERROR:  bigint out of range
select '9223372036854775800'::int8 * '9223372036854775800'::int8;
ERROR:  bigint out of range
select '9223372036854775800'::int8 / '0'::int8;
ERROR:  division by zero
select '9223372036854775800'::int8 % '0'::int8;
ERROR:  division by zero
select abs('-9223372036854775808'::int8);
ERROR:  bigint out of range
SELECT CAST('42'::int2 AS int8), CAST('-37'::int2 AS int8);
 int8 | int8 
------+------
   42 |  -37
(1 row)

SELECT CAST('36854775807.0'::float4 AS int8);
    int8     
-------------
 36854775808
(1 row)

SELECT CAST('922337203685477580700.0'::float8 AS int8);
ERROR:  bigint out of range
-- corner case
SELECT (-1::int8<<63)::text;
         text         
----------------------
 -9223372036854775808
(1 row)

SELECT ((-1::int8<<63)+1)::text;
         text         
----------------------
 -9223372036854775807
(1 row)

-- check sane handling of INT64_MIN overflow cases
SELECT (-9223372036854775808)::int8 * (-1)::int8;
ERROR:  bigint out of range
SELECT (-9223372036854775808)::int8 / (-1)::int8;
ERROR:  bigint out of range
SELECT (-9223372036854775808)::int8 % (-1)::int8;
 ?column? 
----------
        0
(1 row)

SELECT (-9223372036854775808)::int8 * (-1)::int4;
ERROR:  bigint out of range
SELECT (-9223372036854775808)::int8 / (-1)::int4;
ERROR:  bigint out of range
SELECT (-9223372036854775808)::int8 * (-1)::int2;
ERROR:  bigint out of range
SELECT (-9223372036854775808)::int8 / (-1)::int2;
ERROR:  bigint out of range
-- check rounding when casting from float
SELECT x, x::int8 AS int8_value
FROM (VALUES (-2.5::float8),
             (-1.5::float8),
             (-0.5::float8),
             (0.0::float8),
             (0.5::float8),
             (1.5::float8),
             (2.5::float8)) t(x);
  x   | int8_value 
------+------------
 -2.5 |         -2
 -1.5 |         -2
 -0.5 |          0
    0 |          0
  0.5 |          0
  1.5 |          2
  2.5 |          2
(7 rows)

-- check rounding when casting from numeric
SELECT x, x::int8 AS int8_value
FROM (VALUES (-2.5::numeric),
             (-1.5::numeric),
             (-0.5::numeric),
             (0.5::numeric),
             (1.5::numeric),
             (2.5::numeric)) t(x);
  x   | int8_value 
------+------------
 -2.5 |         -3
 -1.5 |         -2
 -0.5 |         -1
  0.5 |          1
  1.5 |          2
  2.5 |          3
(6 rows)

-- test gcd()
SELECT gcd((-9223372036854775808)::int8, 0::int8); -- overflow
ERROR:  bigint out of range
SELECT gcd((-9223372036854775808)::int8, (-9223372036854775808)::int8); -- overflow
ERROR:  bigint out of range
-- test lcm()
SELECT a, b, lcm(a, b), lcm(a, -b), lcm(b, a), lcm(-b, a)
FROM (VALUES (0::int8, 0::int8),
             (0::int8, 29893644334::int8),
             (29893644334::int8, 29893644334::int8),
             (288484263558::int8, 29893644334::int8),
             (-288484263558::int8, 29893644334::int8),
             ((-9223372036854775808)::int8, 0::int8)) AS v(a, b);
          a           |      b      |       lcm        |       lcm        |       lcm        |       lcm        
----------------------+-------------+------------------+------------------+------------------+------------------
                    0 |           0 |                0 |                0 |                0 |                0
                    0 | 29893644334 |                0 |                0 |                0 |                0
          29893644334 | 29893644334 |      29893644334 |      29893644334 |      29893644334 |      29893644334
         288484263558 | 29893644334 | 1261541684539134 | 1261541684539134 | 1261541684539134 | 1261541684539134
        -288484263558 | 29893644334 | 1261541684539134 | 1261541684539134 | 1261541684539134 | 1261541684539134
 -9223372036854775808 |           0 |                0 |                0 |                0 |                0
(6 rows)

SELECT lcm((-9223372036854775808)::int8, 1::int8); -- overflow
ERROR:  bigint out of range
SELECT lcm(9223372036854775807::int8, 9223372036854775806::int8); -- overflow
ERROR:  bigint out of range
